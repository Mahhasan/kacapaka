<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use App\Models\User; // Make sure to import User model

// Category.php
class Category extends Model
{
    use HasFactory;
    protected $fillable = ['cat_name', 'slug', 'image', 'description', 'position', 'is_active', 'created_by'];

    public function subCategories()
    {
        return $this->hasMany(SubCategory::class);
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// SubCategory.php
class SubCategory extends Model
{
    use HasFactory;
    protected $fillable = ['category_id', 'subcat_name', 'slug', 'position', 'is_active', 'created_by'];

    public function category()
    {
        return $this->belongsTo(Category::class);
    }

    public function products()
    {
        return $this->hasMany(Product::class);
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// Brand.php
class Brand extends Model
{
    use HasFactory;
    protected $fillable = ['brand_name', 'slug', 'logo', 'position', 'is_active', 'created_by'];

    public function products()
    {
        return $this->hasMany(Product::class);
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// Tag.php
class Tag extends Model
{
    use HasFactory;
    protected $fillable = ['tag_name', 'slug', 'position', 'is_active', 'created_by'];

    public function products()
    {
        return $this->belongsToMany(Product::class, 'product_tags');
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// Product.php
class Product extends Model
{
    use HasFactory;
    protected $fillable = [
        'product_name', 'slug', 'sku', 'sub_category_id', 'brand_id',
        'short_description', 'description', 'purchase_price', 'selling_price',
        'discount_price', 'stock_quantity', 'thumbnail_image', 'unit',
        'has_free_delivery', 'position', 'is_active', 'created_by'
    ];

    public function subCategory()
    {
        return $this->belongsTo(SubCategory::class);
    }

    public function brand()
    {
        return $this->belongsTo(Brand::class);
    }

    public function images()
    {
        return $this->hasMany(ProductImage::class);
    }

    public function reviews()
    {
        return $this->hasMany(ProductReview::class);
    }

    public function tags()
    {
        return $this->belongsToMany(Tag::class, 'product_tags');
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// ProductImage.php
class ProductImage extends Model
{
    use HasFactory;
    protected $fillable = ['product_id', 'image_url', 'position', 'is_active', 'created_by'];

    public function product()
    {
        return $this->belongsTo(Product::class);
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// ProductReview.php
class ProductReview extends Model
{
    use HasFactory;
    protected $fillable = ['product_id', 'customer_id', 'rating', 'review_text', 'is_approved', 'is_active'];

    public function product()
    {
        return $this->belongsTo(Product::class);
    }

    public function customer()
    {
        return $this->belongsTo(User::class, 'customer_id');
    }
}

// Vendor.php
class Vendor extends Model
{
    use HasFactory;
    protected $fillable = ['vendor_name', 'contact_person', 'phone', 'email', 'address', 'position', 'is_active', 'created_by'];

    public function purchaseOrders()
    {
        return $this->hasMany(PurchaseOrder::class);
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// PurchaseOrder.php
class PurchaseOrder extends Model
{
    use HasFactory;
    protected $fillable = [
        'vendor_id', 'purchase_order_code', 'order_date', 'expected_delivery_date',
        'total_amount', 'paid_amount', 'payment_status', 'order_status', 'is_active', 'created_by'
    ];

    public function vendor()
    {
        return $this->belongsTo(Vendor::class);
    }

    public function items()
    {
        return $this->hasMany(PurchaseOrderItem::class);
    }

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// PurchaseOrderItem.php
class PurchaseOrderItem extends Model
{
    use HasFactory;
    protected $fillable = ['purchase_order_id', 'product_id', 'quantity', 'cost_per_unit', 'total_cost', 'is_active'];
}


// CustomerAddress.php
class CustomerAddress extends Model
{
    use HasFactory;
    protected $fillable = ['customer_id', 'address_line_1', 'address_line_2', 'city', 'postal_code', 'is_default', 'is_active'];

    public function customer()
    {
        return $this->belongsTo(User::class, 'customer_id');
    }
}

// Cart.php
class Cart extends Model
{
    use HasFactory;
    protected $fillable = ['customer_id', 'product_id', 'quantity'];
}

// Promotion.php
class Promotion extends Model
{
    use HasFactory;
    protected $fillable = ['promo_code', 'type', 'value', 'start_date', 'end_date', 'usage_limit', 'position', 'is_active', 'created_by'];

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// Order.php
class Order extends Model
{
    use HasFactory;
    protected $fillable = [
        'order_number', 'customer_id', 'shipping_address_id', 'promotion_id', 'sub_total',
        'discount_amount', 'shipping_cost', 'total_amount', 'payment_method', 'payment_status',
        'manual_transaction_id', 'payment_details', 'order_status', 'notes', 'is_active'
    ];

    public function customer()
    {
        return $this->belongsTo(User::class, 'customer_id');
    }

    public function shippingAddress()
    {
        return $this->belongsTo(CustomerAddress::class, 'shipping_address_id');
    }

    public function promotion()
    {
        return $this->belongsTo(Promotion::class);
    }

    public function items()
    {
        return $this->hasMany(OrderItem::class);
    }

    public function transactions()
    {
        return $this->morphMany(Transaction::class, 'sourceable');
    }
}

// OrderItem.php
class OrderItem extends Model
{
    use HasFactory;
    protected $fillable = ['order_id', 'product_id', 'quantity', 'price_per_unit', 'total_price', 'is_active'];

    public function product()
    {
        return $this->belongsTo(Product::class);
    }
}

// ExpenseCategory.php
class ExpenseCategory extends Model
{
    use HasFactory;
    protected $fillable = ['exp_cat_name', 'description', 'position', 'is_active', 'created_by'];

    public function createdBy()
    {
        return $this->belongsTo(User::class, 'created_by');
    }
}

// Expense.php
class Expense extends Model
{
    use HasFactory;
    protected $fillable = ['expense_category_id', 'amount', 'description', 'expense_date', 'created_by', 'is_active'];

    public function category()
    {
        return $this->belongsTo(ExpenseCategory::class, 'expense_category_id');
    }

    public function creator()
    {
        return $this->belongsTo(User::class, 'created_by');
    }

    public function transactions()
    {
        return $this->morphMany(Transaction::class, 'sourceable');
    }
}

// Transaction.php
class Transaction extends Model
{
    use HasFactory;
    protected $fillable = ['sourceable_id', 'sourceable_type', 'amount', 'type', 'description', 'transaction_date', 'is_active'];

    public function sourceable()
    {
        return $this->morphTo();
    }
}

